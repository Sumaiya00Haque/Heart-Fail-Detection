# -*- coding: utf-8 -*-
"""Project Heart Failure.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BpuuQbG0rDJt9BVlllgbRiP9cCc0FB1U
"""

import tensorflow as tf
import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
import keras 
from keras.models import Sequential 
from keras.layers import Dense 
from sklearn.metrics import confusion_matrix 
data = pd.read_csv('heart.csv') 
data.head()

"""# New Section"""

from google.colab import drive
drive.mount('/content/drive')

data.describe()

data.isnull().any()

X = data.iloc[:,:13].values 
y = data.iloc[:13].values

classifier = Sequential() 
classifier.add(Dense(activation = "relu", input_dim = 13, 
					units = 8, kernel_initializer = "uniform")) 
classifier.add(Dense(activation = "relu", units = 14, 
					kernel_initializer = "uniform")) 
classifier.add(Dense(activation = "sigmoid", units = 1, 
					kernel_initializer = "uniform")) 
classifier.compile(optimizer = 'adam' , loss = 'binary_crossentropy', 
				metrics = ['accuracy'] )

from sklearn.linear_model import LogisticRegression 
logreg = LogisticRegression() 
logreg.fit(X_train, y_train) 
y_pred = logreg.predict(X_test) 

# Evaluation and accuracy 
from sklearn.metrics import jaccard_similarity_score 
print('') 
print('Accuracy of the model in jaccard similarity score is = ', 
	jaccard_similarity_score(y_test, y_pred))

# Confusion matrix 
from sklearn.metrics import confusion_matrix, classification_report 

cm = confusion_matrix(y_test, y_pred)

accuracy = (cm[0][0]+cm[1][1])/(cm[0][1] + cm[1][0] +cm[0][0] +cm[1][1]) 
print(accuracy*100)

